box: python:2.7-slim
hello:
  steps:
    - scripts:
        name: helloworld
        code: |
          echo "hello world"
dev:
  steps:
    - pip-install
    - internal/watch:
        code: python app.py
        reload: true
# Build definition
build:
  # The steps that will be executed on build
  steps:
    # A step that executes `pip install` command
    - pip-install

    # A custom script step, name value is used in the UI
    # and the code value contains the command that get executed
    - script:
        name: python unit test
        code: |
          echo "python version $(python --version) running"
          python app_test.py
deploy:
  steps:
    - pip-install
    - internal/docker-push:
        username: $DOCKERHUB_USERNAME
        password: $DOCKERHUB_PASSWORD
        tag: pyapp-test
        cmd: python /pipeline/source/app.py
        ports: "5000"
        repository: $DOCKERHUB_REPO
        registry: https://registry.hub.docker.com
# add pipline
run_on_occs:
  steps:
    - install-packages:
        packages: curl
    - script:
        name: create deployment on occs
        code: |  
          echo "Get auth token*********************"
          AUTH_TOKEN="$OCCS_API_TOKEN"
          echo "Get session token*********************"
          SESSION_TOKEN=$(curl -k  -H "Authorization: Session $AUTH_TOKEN" "${OCCS_URL}/api/token"| python -c "import sys, json; print json.load(sys.stdin)['token']")
          curl -k -H "Authorization: Session $AUTH_TOKEN" "${OCCS_URL}/api/token"
          export DEP_ID=$((1 + RANDOM % 1000))
          echo "creating deployment..."
          cat > deployment.json << EOF
              {
               "deployment_id":"myDeployment$DEP_ID",
               "deployment_name":"myDeployment$DEP_ID",
               "desired_state":1,
               "placement":{"pool_id":"default"},
               "quantities":{"mytest1":1},
               "stack":
               {
                 "content":"version: 2\nservices:\n  mytest1:\n    image: \"gaojw/py_app:pyapp-test\"\n    \n",
                 "service_id":"mytest1",
                 "service_name":"mytest1",
                 "subtype":"service"
                }
              }
          EOF
          curl -sk -X POST -H "Authorization: Bearer $SESSION_TOKEN" ${OCCS_URL}/api/v2/deployments/ --data "@deployment.json"
          curl -sk -X POST -H "Authorization: Bearer $SESSION_TOKEN" ${OCCS_URL}/api/v2/deployments/myDeployment$DEP_ID/stop
          curl -sk -X GET -H "Authorization: Bearer $SESSION_TOKEN" ${OCCS_URL}/api/v2/deployments/myDeployment$DEP_ID
